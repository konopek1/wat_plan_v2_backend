{"version":3,"sources":["Table.ts","helper.ts","Input.ts","main.ts"],"names":[],"mappings":"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","file":"main.dc1e0a25.js","sourceRoot":"..","sourcesContent":["import { Krotka, domElement} from './index';\nimport Week from './Week';\nimport { getCurrentWeeks,BASE_URL } from './helper';\n\nconst DAYS = [\"Poniedziałek\",\"Wtorek\",\"Środa\",\"Czwartek\",\"Piątek\",\"Sobota\",\"Niedziela\"];\n\nexport default class Table implements domElement {\n    insert_id: string;\n    id: string;\n    private data: Krotka[];\n    private cssClass: string;\n    private isMoblie: boolean;\n    private offset:number;\n    group: string;\n\n    constructor(data:Krotka[],insert_id: string,offset:number) {\n        this.data = data;\n        this.insert_id = insert_id;\n        this.offset = offset;\n    }\n\n    render(): string {\n        let n_day = 0\n        const td = (value: string) => { return (`<td class=\"td_1\">${value}</td>`) };\n        const tr = (value: string) => { return (`<tr class=\"tr_1\">${value}</tr>`) };\n        let content = \"\";\n        for (let i = 0; i < this.data.length - 6; i += 7) {\n            let day = \"\";\n            for (let j = 0; j < 7; j++) {\n                day += td(this.data[i + j].name);\n            }\n            content += tr(td(DAYS[n_day])+day);\n            n_day < 7 ? n_day++ : n_day=0;\n        }\n        const week = getCurrentWeeks(this.offset);\n        return (\n            `<table class=\"container\"><thead><tr><th class=\"date\">${week}</th><th>8:00 - 9:35</th><th>9:50 - 11:25 </th><th>11:40 - 13:15</th><th>13:30 - 15:05</th>\n            <th>15:45 - 17:20</th><th>17:35 - 19:10</th><th>19:25 - 21:00</th></td></thead><tbody>${content}</tbody></table>`\n        );\n    }\n\n    public inject(id?:string): void {\n        document.getElementById(id || this.insert_id).innerHTML = this.render();\n    }\n}","import Table from './Table';\nimport { Krotka} from '.';\nexport const BASE_URL = \"https://wat-plan-backend.herokuapp.com\";\n\nexport const START_DATE = new Date(2020, 1, 24);\n\nfunction toDays(date: Date): number {\n    return Math.floor(date.valueOf() / 86400000);\n}\n\nfunction addDays(date: Date, days: number) {\n    const result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n}\n\nexport function getDataOffset(): number {\n    const currDays = toDays(new Date());\n    const startDays = toDays(START_DATE);\n    return Math.floor((currDays - startDays) / 7);\n}\n\nexport function getCurrentWeeks(offset: number): string {\n    const weekOffset = getDataOffset() + offset;\n    const startWeek = addDays(new Date(), weekOffset * 7);\n    const endWeek = addDays(new Date(), (weekOffset + 1) * 7);\n    return `${startWeek.toISOString().split('T')[0].slice(5)} ~ ${endWeek.toISOString().split('T')[0].slice(5)}`;\n}\n\nexport default function start(group: string, numberOfWeeks: number = 10): void {\n    const data = fetchData(group);\n    const offsetNumberOfWeeks = getDataOffset();\n    console.log(offsetNumberOfWeeks);\n    for (let i = offsetNumberOfWeeks; i < numberOfWeeks + offsetNumberOfWeeks; i++) {\n\n        const div = document.createElement('div');\n        div.id = 'container' + i.toString();\n        document.body.appendChild(div);\n\n        const weekData = data.slice(i * 49, (i + 1) * 49);\n\n        const table = new Table(weekData, 'container' + i,i);\n        table.inject();\n    }\n}\n\nexport function fetchData(group: string): Krotka[] {\n    let req = new XMLHttpRequest();\n    let data: Krotka[];\n    req.open('GET', `${BASE_URL}/?group=${group}`, false);\n    req.onreadystatechange = function (aEvt) {\n        if (req.readyState == 4) {\n            if (req.status == 200)\n                data = JSON.parse(JSON.parse(req.response));\n        }\n    };\n    req.send(null);\n    return data;\n}","import { domElement } from \".\";\nimport start,{getDataOffset} from \"./helper\";\n\nexport default class Input implements domElement{\n\n    insert_id?: string;\n    id: string;\n    element?:HTMLInputElement;\n    placeholder:string;\n    render(): string {\n        return (`<div class=\"form__group field\">\n        <input type=\"input\" class=\"form__field\" placeholder=\"${this.placeholder}\" value=\"\" name=\"${this.placeholder}\" id='${this.id}' required />\n        <label for=\"${this.placeholder}\" class=\"form__label\">${this.placeholder}</label>\n        </div>`);\n    }\n    constructor(id:string,placeholder:string,insert_id?:string,onkeydown?: (e:KeyboardEvent)=> void) {\n        this.id = id;\n        this.placeholder = placeholder;\n        insert_id ? this.insert_id = insert_id : null;\n        onkeydown ? this.onKeyDown = onkeydown : null;\n    }\n\n    onKeyDown(e:KeyboardEvent):void{\n        switch (e.which) {\n            case 13:\n                start(this.getValue());\n                break;\n        \n            default:\n                break;\n        }\n    }\n\n    getValue():string{\n        return this.element.value;\n    }\n\n\n    inject(id?:string): void {  \n        const outerElement = document.getElementById(id || this.insert_id || 'body');\n        outerElement.innerHTML = this.render();\n        this.element = outerElement.querySelector(`#${this.id}`);\n        this.element.onkeydown = this.onKeyDown.bind(this); \n    }\n\n}","import Input from './Input';\n\n\nconst input = new Input('input_1','Grupa','search_bar');\ninput.inject();\n\n\n\n\n"]}